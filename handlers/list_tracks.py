from aiogram import types, Router
from db_handlers.db_class import db
from utils.airport_codes import get_airport_name
from utils.aviasales_api import CURRENCY

router = Router()

@router.message(lambda msg: msg.text == "üìã –ú–æ–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è")
async def list_user_trackers(message: types.Message):
    await db.connect()
    try:
        # –ü–æ–ª—É—á–∞–µ–º user_id –ø–æ Telegram ID
        async with db.db.execute("SELECT id FROM users WHERE telegram_id = ?", (message.from_user.id,)) as cursor:
            user = await cursor.fetchone()

        if not user:
            await message.answer("‚ùó –í—ã –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è.")
            return

        user_id = user["id"]
        trackers = await db.get_user_trackers(user_id)

        if not trackers:
            await message.answer("üîç –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π.")
            return

        response_lines = ["üì° <b>–ê–∫—Ç–∏–≤–Ω—ã–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è:</b>\n"]

        for t in trackers:
            response_lines.append(
                f"‚úàÔ∏è <b>{get_airport_name(t['origin'])}</b> ‚Üí <b>{get_airport_name(t['destination'])}</b>\n"
                f"üìÖ –î–∞—Ç–∞: <b>{t['date'][0]}</b>\n"
                f"üí∞ –õ–∏–º–∏—Ç: <b>{t['price_limit']} {CURRENCY.upper()}</b>\n"
                "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
            )

        await message.answer("\n".join(response_lines))

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–π.")
