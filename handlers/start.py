from aiogram import types, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from keyboards.all_keyboards import main_menu, search_menu, tracking_menu  # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
from db_handlers.db_class import db

router = Router()

@router.message(Command("start"))
async def start_command(message: types.Message, state: FSMContext):
    try:
        await state.clear()
    except Exception:
        pass
    await db.connect()
    user_id = await db.add_user(message.from_user.id, message.from_user.username)
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∞–≤–∏–∞—Ä–µ–π—Å–æ–≤ –∏ –¥–µ—à—ë–≤—ã—Ö –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤.\n\n"
        "‚úà –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è",
        reply_markup=main_menu
    )


@router.message(lambda msg: msg.text == "–ü–æ–∏—Å–∫ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤")
async def show_search_menu(message: types.Message, state: FSMContext):
    try:
        await state.clear()
    except Exception:
        pass
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –ø–æ–∏—Å–∫–∞:", reply_markup=search_menu)


@router.message(lambda msg: msg.text == "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–≤–∏–∞—Ä–µ–π—Å–æ–≤")
async def show_tracking_menu(message: types.Message, state: FSMContext):
    try:
        await state.clear()
    except Exception:
        pass
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=tracking_menu)


@router.message(lambda msg: msg.text == "‚¨Ö –ù–∞–∑–∞–¥")
async def back_to_main_menu(message: types.Message, state: FSMContext):
    try:
        await state.clear()
    except Exception:
        pass
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu)
